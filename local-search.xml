<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Oracle报错记录</title>
    <link href="/2025/01/06/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/"/>
    <url>/2025/01/06/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<p>q</p><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><h3 id="ORA-01720-grant-opetion-does-not-exist-for-‘-’"><a href="#ORA-01720-grant-opetion-does-not-exist-for-‘-’" class="headerlink" title="ORA-01720: grant opetion does not exist for ‘****’"></a>ORA-01720: grant opetion does not exist for ‘****’</h3><p>试图通过一个权限链授予权限给其他用户时，您没有被授予该权限的 <strong>WITH GRANT OPTION</strong> 权限</p><p><strong>问题：</strong></p><ul><li>A用户创建一个表 ，给B用户赋予<code>Select</code>权限。</li><li>B用户使用该表创建一个视图</li><li>B用户将该视图的<code>Select</code>权限赋予C，提示上述报错</li></ul><p><strong>原因：</strong></p><p>因为 B 用户对 A 用户的表没有 <code>WITH GRANT OPTION</code> 权限，导致 B 用户创建的视图也无法将权限传播给其他用户。</p><p><strong>解决：</strong></p><p>方法1：A 用户给 B 用户授予权限时添加 <code>WITH GRANT OPTION</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ON</span> A<span class="token punctuation">.</span>表名 <span class="token keyword">TO</span> B <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>方法2：A 用户直接授予 C 用户权限</p><figure><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ON</span> A<span class="token punctuation">.</span>表名 <span class="token keyword">TO</span> C<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>方法3：通过角色管理权限</p><figure><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># A 用户创建角色并授予权限</span><span class="token keyword">CREATE</span> ROLE VIEW_ACCESS_ROLE<span class="token punctuation">;</span><span class="token keyword">GRANT</span> <span class="token keyword">SELECT</span> <span class="token keyword">ON</span> A<span class="token punctuation">.</span>表名 <span class="token keyword">TO</span> VIEW_ACCESS_ROLE<span class="token punctuation">;</span><span class="token comment"># 将角色授予 B 和 C 用户</span><span class="token keyword">GRANT</span> VIEW_ACCESS_ROLE <span class="token keyword">TO</span> B<span class="token punctuation">;</span><span class="token keyword">GRANT</span> VIEW_ACCESS_ROLE <span class="token keyword">TO</span> C<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>方法4：使用 <code>BEQUEATH CURRENT_USER</code> 创建视图 (Oracle 12c 及以上版本)</p><figure><div class="code-wrapper"><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> B<span class="token punctuation">.</span>视图名 BEQUEATH <span class="token keyword">CURRENT_USER</span> <span class="token keyword">AS</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> A<span class="token punctuation">.</span>表名<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>数据库运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>Oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Python处理文件</title>
    <link href="/2025/01/06/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/%E4%BD%BF%E7%94%A8Python%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6/"/>
    <url>/2025/01/06/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4/%E4%BD%BF%E7%94%A8Python%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h2 id="压缩包文件"><a href="#压缩包文件" class="headerlink" title="压缩包文件"></a>压缩包文件</h2><p>一般通过文件名后缀来判别文件的压缩方式，常见的压缩方式有</p><ul><li>.tar.gz</li><li>.zip</li></ul><h3 id="tar-gz"><a href="#tar-gz" class="headerlink" title=".tar.gz"></a>.tar.gz</h3><p>需要提前安装<code>tarfile</code>库, 安装命令<code>pip install tarfile</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> tarfilefilename <span class="token operator">=</span> <span class="token string">"file.tar.gz"</span>tf <span class="token operator">=</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token comment"># 显示压缩包中的文件</span><span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>getnames<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 解压到指定目录</span>tf<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span><span class="token string">'/test/'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="zip"><a href="#zip" class="headerlink" title=".zip"></a>.zip</h3><h2 id="分割文件"><a href="#分割文件" class="headerlink" title="分割文件"></a>分割文件</h2><p>常见文件读取</p>]]></content>
    
    
    <categories>
      
      <category>自动化运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>文件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库实现CICD</title>
    <link href="/2024/12/23/DevOps/CICD/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0CICD/"/>
    <url>/2024/12/23/DevOps/CICD/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0CICD/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python实现CICD</title>
    <link href="/2024/12/23/DevOps/CICD/Python%E5%AE%9E%E7%8E%B0CICD/"/>
    <url>/2024/12/23/DevOps/CICD/Python%E5%AE%9E%E7%8E%B0CICD/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>源代码管理工具</title>
    <link href="/2024/12/23/DevOps/CICD/%E6%BA%90%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    <url>/2024/12/23/DevOps/CICD/%E6%BA%90%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</url>
    
    <content type="html"><![CDATA[<p>G</p><p>Git工具使用</p><ul><li>分支管理：创建、删除、合并、Push、Pull</li><li>将仓库拉取到指定目录</li></ul><p>GitLab</p><ul><li>webhook触发</li></ul><p>GitHub</p><ul><li>webhook触发</li></ul>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CICD</tag>
      
      <tag>Git</tag>
      
      <tag>GitLab</tag>
      
      <tag>GitHub</tag>
      
      <tag>版本管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA程序实现CICD</title>
    <link href="/2024/12/23/DevOps/CICD/JAVA%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0CICD/"/>
    <url>/2024/12/23/DevOps/CICD/JAVA%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0CICD/</url>
    
    <content type="html"><![CDATA[<p>l</p><h2 id="发布方案"><a href="#发布方案" class="headerlink" title="发布方案"></a>发布方案</h2><p>手动发布</p><p>自动化发布：WebHook</p><p>测试环境流程：CI和CD集成</p><ul><li>拉取代码</li><li>编译打包</li><li>部署</li></ul><p>生产环境流程：CI和CD分开</p><h2 id="仓库管理"><a href="#仓库管理" class="headerlink" title="仓库管理"></a>仓库管理</h2><p>常用的源代码仓库管理工具：Gitlab、GitHub、SVN</p><h2 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h2><h3 id="工具-Maven"><a href="#工具-Maven" class="headerlink" title="工具 Maven"></a>工具 Maven</h3><h4 id="常用命令及其说明"><a href="#常用命令及其说明" class="headerlink" title="常用命令及其说明"></a><strong>常用命令及其说明</strong></h4><table><thead><tr><th>命令</th><th>作用</th><th>使用场景</th></tr></thead><tbody><tr><td><code>mvn clean</code></td><td>删除 <code>target</code> 目录（即清理构建产物）</td><td>在重新构建之前执行，以确保干净的构建环境</td></tr><tr><td><code>mvn compile</code></td><td>编译 <code>src/main/java</code> 下的源代码</td><td>单独验证代码编译是否通过时</td></tr><tr><td><code>mvn test-compile</code></td><td>编译 <code>src/test/java</code> 下的测试代码</td><td>在运行测试前确保测试代码无误</td></tr><tr><td><code>mvn test</code></td><td>行所有测试类（包括单元测试和集成测试）</td><td>在提交代码前验证代码的正确性</td></tr><tr><td><code>mvn package</code></td><td>将项目打包为 JAR 或 WAR 文件，<code>target</code> 目录</td><td>构建项目的主要流程，生成可运行的制品</td></tr><tr><td><code>mvn install</code></td><td>构建的制品安装到本地 Maven 仓库，供其他项目依赖</td><td>项目间存在依赖关系时</td></tr><tr><td><code>mvn verify</code></td><td>运行集成测试，检查制品是否合格</td><td></td></tr><tr><td><code>mvn deploy</code></td><td>将制品部署到远程仓库</td><td></td></tr></tbody></table><h4 id="实际常用命令"><a href="#实际常用命令" class="headerlink" title="实际常用命令"></a><strong>实际常用命令</strong></h4><p><strong>清除构建产物、安装到本地仓库、并跳过测试</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">maven clean <span class="token function">install</span> <span class="token parameter variable">-Dmaven.test.skip</span><span class="token operator">=</span>true <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ul><li><code>-Dmaven.test.skip=true </code>：跳过单元测试和集成测试阶段，<strong>不编译</strong>测试代码</li></ul><p><strong>指定Profile</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">maven clean <span class="token function">install</span> -P<span class="token operator">&lt;</span>profile_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>激活特定的 Maven Profile，以应用不同的配置</p><p>profile 通常定义在 <code>pom.xml</code> 或 <code>settings.xml</code> 中，用于控制依赖、插件、属性等</p><p><code>pom.xml</code> 中配置示例</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>dev<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span><span class="token punctuation">></span></span>development<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>prod<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>env</span><span class="token punctuation">></span></span>production<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>env</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean package <span class="token parameter variable">-Pdev</span>   <span class="token comment"># 激活 dev 配置</span>mvn clean package <span class="token parameter variable">-Pprod</span>  <span class="token comment"># 激活 prod 配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><strong>指定属性</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">maven clean <span class="token function">install</span> -D<span class="token operator">&lt;</span>property_name<span class="token operator">>=</span><span class="token operator">&lt;</span>value<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ul><li>在运行时动态传递属性值，用于替代 <code>pom.xml</code> 中的默认值</li><li>可覆盖 <code>pom.xml</code> 或 Profile 中定义的属性</li><li>使用场景为动态指定版本号、环境变量、构建选项等</li></ul><p><code>pom.xml</code>配置示例</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">></span></span>$&#123;artifactId&#125;-$&#123;version&#125;-$&#123;build.env&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean package <span class="token parameter variable">-Dbuild.env</span><span class="token operator">=</span>dev<span class="token comment"># 生成的文件名可能为 my-app-1.0.0-dev.jar。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><strong>指定子模块构建</strong></p><p>项目目录结构</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">my-project&#x2F;│├── module-a&#x2F;│   ├── pom.xml│├── module-b&#x2F;│   ├── pom.xml│└── pom.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>方式一</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> module-amvn clean package<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>方式二</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean package <span class="token parameter variable">-pl</span> module-a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>检查依赖时使用</strong></p><p>展示项目依赖的层次结构，解决依赖冲突</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn dependency:tree<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>跳过测试</strong></p><p>跳过单元测试阶段，仍会编译测试代码</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean package <span class="token parameter variable">-DskipTests</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h4 id="构建优化"><a href="#构建优化" class="headerlink" title="构建优化"></a>构建优化</h4><p><strong><code>-T</code> 开启多线程构建</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean <span class="token function">install</span> <span class="token parameter variable">-T</span> 1C <span class="token comment"># 1C 表示使用与 CPU 核心数相同的线程数</span>mvn clean <span class="token function">install</span> <span class="token parameter variable">-T</span> <span class="token number">4</span> <span class="token comment"># 使用 4 个线程</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><strong><code>-U</code> 强制更新SNAPSHOT 版本的依赖</strong></p><p>当远程仓库的 SNAPSHOT 版本有更新，而本地未自动同步时</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean <span class="token function">install</span> <span class="token parameter variable">-U</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>配置镜像源</strong></p><p><code>settings.xml</code> 中配置镜像源，内网中可以部署Nexus加速。外网环境可使用阿里云源</p><p><strong>确保插件版本稳定</strong></p><p>指定插件版本，避免因版本变化导致构建失败</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.8.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>调整日志级别</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean <span class="token function">install</span> <span class="token parameter variable">-q</span>   <span class="token comment"># 静默模式, 只输出错误日志</span>mvn clean <span class="token function">install</span> <span class="token parameter variable">-X</span>   <span class="token comment"># 调试模式，输出详细日志</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p><strong>指定Maven配置文件</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mvn clean <span class="token function">install</span> <span class="token parameter variable">-s</span> /path/to/custom-settings.xml<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>配置环境变量</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># -Denv=&lt;environment></span>mvn clean package <span class="token parameter variable">-Denv</span><span class="token operator">=</span>test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h3 id="JAVA构建制品"><a href="#JAVA构建制品" class="headerlink" title="JAVA构建制品"></a>JAVA构建制品</h3><p>JAVA制品使用Maven打包时，制品默认以<code>JAR</code>包方式生成在<code>target</code>目录</p><p><strong>appassembler-maven-plugin 插件</strong></p><p>使用该插件打包时，会在<code>target</code>目录下生成一个<code>zip</code>压缩文件。根据下面<code>pom.xml</code>中配置，压缩文件包含以下目录</p><ul><li><strong><code>bin</code>：</strong> 服务的启动脚本路径，例如：.&#x2F;bin&#x2F;serivce_name {start|restart|stop|status}</li><li><strong><code>conf</code>：</strong> 配置文件路径，从<code>src/main/resources</code>目录下的复制到<code>conf</code>目录下，可以自定义过滤规则。</li><li><strong><code>lib</code>：</strong> 依赖和包存放路径</li><li><strong><code>logs</code>：</strong> 日志存放路径</li></ul><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.codehaus.mojo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>appassembler-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>platforms</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>platform</span><span class="token punctuation">></span></span>unix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>platform</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>platform</span><span class="token punctuation">></span></span>windows<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>platform</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>platforms</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--包的存放路劲--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembleDirectory</span><span class="token punctuation">></span></span>$&#123;project.build.directory&#125;/$&#123;project.name&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembleDirectory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositoryName</span><span class="token punctuation">></span></span>lib<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositoryName</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--启动脚本目录--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>binFolder</span><span class="token punctuation">></span></span>bin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>binFolder</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--配置文件路径--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configurationDirectory</span><span class="token punctuation">></span></span>conf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configurationDirectory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--是否copy配置文件--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>copyConfigurationDirectory</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>copyConfigurationDirectory</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--从哪里copy配置文件--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configurationSourceDirectory</span><span class="token punctuation">></span></span>src/main/resources<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configurationSourceDirectory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includeConfigurationDirectoryInClasspath</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includeConfigurationDirectoryInClasspath</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--flag 表示直接将jar放到lib 里面--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositoryLayout</span><span class="token punctuation">></span></span>flat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositoryLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>logsDirectory</span><span class="token punctuation">></span></span>logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>logsDirectory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tempDirectory</span><span class="token punctuation">></span></span>tmp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tempDirectory</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>programs</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>program</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>tk.shenyifeng.demo.DemoApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jvmSettings</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArguments</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-Xms256M<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-Xmx256M<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-Xss512k<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-Xloggc:@BASEDIR@/logs/demo_gc.log<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-verbose:gc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-XX:+HeapDumpOnOutOfMemoryError<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>extraArgument</span><span class="token punctuation">></span></span>-XX:HeapDumpPath=@BASEDIR@/logs/java_heapdump.hprof<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArgument</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>extraArguments</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jvmSettings</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>program</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>programs</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="代码扫描"><a href="#代码扫描" class="headerlink" title="代码扫描"></a>代码扫描</h2><p>sonarqube</p><h2 id="自动化测试"><a href="#自动化测试" class="headerlink" title="自动化测试"></a>自动化测试</h2><p>压测</p><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><h3 id="部署脚本"><a href="#部署脚本" class="headerlink" title="部署脚本"></a>部署脚本</h3><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 定义应用程序的目录和文件</span><span class="token assign-left variable">APP_DIR</span><span class="token operator">=</span><span class="token string">"/opt/myapp"</span><span class="token assign-left variable">CURRENT_JAR</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$APP_DIR</span>/myapp-1.0.0.jar"</span><span class="token assign-left variable">NEW_JAR</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$APP_DIR</span>/myapp-1.1.0.jar"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>停止服务</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 停止当前的 Java 服务进程</span><span class="token builtin class-name">echo</span> <span class="token string">"Stopping current service..."</span><span class="token assign-left variable">CURRENT_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"<span class="token variable">$CURRENT_JAR</span>"</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'&#123;print $2&#125;'</span><span class="token variable">)</span></span><span class="token comment"># 如果当前进程存在，则停止它</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">"<span class="token variable">$CURRENT_PID</span>"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token function">kill</span> <span class="token parameter variable">-15</span> <span class="token variable">$CURRENT_PID</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Stopped current service with PID <span class="token variable">$CURRENT_PID</span>."</span><span class="token keyword">else</span>    <span class="token builtin class-name">echo</span> <span class="token string">"No running service found."</span><span class="token keyword">fi</span><span class="token comment"># 检查服务是否完全退出，每隔一秒循环检查，完全退出时继续执行</span><span class="token comment"># 1 检查进程</span><span class="token comment"># 2 检查服务端口</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>备份服务</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 备份当前版本（可选）</span><span class="token builtin class-name">echo</span> <span class="token string">"Backing up current version..."</span><span class="token assign-left variable">TIMESTAMP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">"%Y%m%d%H%M%S"</span><span class="token variable">)</span></span><span class="token assign-left variable">BACKUP_JAR</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$CURRENT_JAR</span>.<span class="token variable">$TIMESTAMP</span>"</span><span class="token function">cp</span> <span class="token variable">$CURRENT_JAR</span> <span class="token variable">$BACKUP_JAR</span><span class="token builtin class-name">echo</span> <span class="token string">"Backup completed: <span class="token variable">$BACKUP_JAR</span>"</span><span class="token comment"># 增加备份策略，保留几次备份</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>更新服务</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 替换为新版本 JAR 文件</span><span class="token builtin class-name">echo</span> <span class="token string">"Deploying new version..."</span><span class="token function">cp</span> <span class="token variable">$NEW_JAR</span> <span class="token variable">$CURRENT_JAR</span><span class="token comment"># 确保新版本 JAR 文件已正确复制</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token variable">$CURRENT_JAR</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token builtin class-name">echo</span> <span class="token string">"Failed to deploy new version. Exiting deployment."</span>    <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token keyword">fi</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>启动服务</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 启动新版本的 Java 服务, 限制内存大小为1024m</span><span class="token builtin class-name">echo</span> <span class="token string">"Starting new version of the service..."</span><span class="token function">nohup</span> <span class="token function">java</span> <span class="token parameter variable">-Xms1024m</span> <span class="token parameter variable">-Xmx1024m</span> <span class="token parameter variable">-jar</span> <span class="token variable">$CURRENT_JAR</span> <span class="token operator">></span> <span class="token variable">$APP_DIR</span>/myapp.log <span class="token operator"><span class="token file-descriptor important">2</span>></span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><p><strong>检查服务</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 需要检查服务启动成功，一般服务启动成功时，日志当中会有JVM Running日志，或者检查端口启动，或者服务有api健康检查接口</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>回滚</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 方案一：将jar包复制为特定名称，如果该文件存在，先将该文件备份成含日期文件</span><span class="token comment"># 方案二：将jar包备份后的名称保存一个文件中，回滚时读取该文件</span><span class="token comment"># 只能回滚上次</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>JAVA应用启动时，通常需要加载一些配置文件。以Spring Boot配置文件为例</p><p><strong>默认自动加载的配置文件</strong></p><ul><li>对于<code>properties</code>文件，Spring Boot会默认加载<code>application.properties</code>文件</li><li>对于<code>yaml</code>文件，Spring Boot会默认加载<code>application.yml</code>或<code>application.yaml</code>文件</li></ul><p>文件通常位于<code>src/main/resources</code>目录下</p><p><strong>多环境配置文件</strong></p><p>通过使用<code>spring.profiles.active</code>属性，可以指定当前活动的配置文件环境</p><ul><li><code>application-dev.yml</code>文件，用于开发环境的配置</li><li><code>application-test.yml</code>文件，用于测试环境的配置</li><li><code>application-prod.yml</code>文件，用于生产环境的配置</li></ul><blockquote><p>其中<code>spring.profiles.active</code>属性可以在<code>application.yaml</code> 设置默认值，如果需要运行其它配置文件，可以在命令行参数中指定 -Dspring.profiles.active&#x3D;prod</p><p>注：如果<code>application.yaml</code>中设置了<code>spring.profiles.active</code>属性，<code>application-dev.yaml</code>不需要再次设置该属性，否则会导致应用启动报错</p></blockquote><blockquote><p>Spring Boot项目中配置文件通常放在<code>src/main/resources</code>目录下，假如现在有以下配置文件<code>application.yml</code>、<code>application-dev.yml</code>、<code>application-test.yml</code>、<code>application-prod.yml</code></p><p>使用Maven进行编译打包时，会将这些配置文件都打仅生成的jar包中。如果应用启动命令为 </p><p>java -server app.jar –spring-profiles-active&#x3D;test</p><p>会先加载jar包中的<code>application.yml</code>和<code>application-test.yml</code>文件。如果在jar包同目录下有配置文件<code>application-test.yml</code>，则只会加载JAR包中的<code>application.yml</code>和 jar包同目录下的<code>application-test.yml</code></p></blockquote><p><strong>属性优先级</strong></p><p>配置文件的加载顺序是：<code>application.yaml</code> &gt; <code>application-dev.yaml</code>, 因此后面的属性会覆盖前面相同的属性值</p><p>属性的优先级：命令行参数 &lt; 系统配置 &lt; 环境变量 &lt; 配置文件</p><h2 id="容器化"><a href="#容器化" class="headerlink" title="容器化"></a>容器化</h2><p>容器化的几种方式</p><ul><li>第三方插件</li><li>Spring Boot官方插件</li><li>Dockerfile</li></ul><h3 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h3><p><code>spotify/dockerfile-maven-plugin</code> 和 <code>spotify/docker-maven-plugin</code> 仓库都已只读</p><p>推荐使用<code>fabric8/docker-maven-plugin</code></p><p>GitHub地址：<a href="https://github.com/fabric8io/docker-maven-plugin">https://github.com/fabric8io/docker-maven-plugin</a></p><p>官方地址：<a href="https://dmp.fabric8.io/#external-configuration">https://dmp.fabric8.io/#external-configuration</a></p><p>使用 Fabric8 插件构建Java镜像示例，<code>pom.xml</code>添加以下配置：</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--镜像名称--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.name</span><span class="token punctuation">></span></span>jolokia/demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.name</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--别名--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.alias</span><span class="token punctuation">></span></span>service<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.alias</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--基础镜像--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.from</span><span class="token punctuation">></span></span>consol/tomcat:7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.from</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.assembly.descriptor</span><span class="token punctuation">></span></span>src/main/docker-assembly.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.assembly.descriptor</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--启动参数--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.env.JAVA_OPTS</span><span class="token punctuation">></span></span>-Xmx32m<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.env.JAVA_OPTS</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--镜像标签版本号--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.label.version</span><span class="token punctuation">></span></span>$&#123;project.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.label.version</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--运行用户--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.user</span><span class="token punctuation">></span></span>1001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.user</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--推送镜像仓库地址--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>docker.registry</span><span class="token punctuation">></span></span>http://docker.registry.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>docker.registry</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.fabric8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>docker-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>images</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>external</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>properties<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>prefix</span><span class="token punctuation">></span></span>docker<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>prefix</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>external</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>images</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>一个构建JAVA应用的<code>Dockerfile</code>示例</p><figure><div class="code-wrapper"><pre class="line-numbers language-docker" data-language="docker"><code class="language-docker"><span class="token comment"># =======================</span><span class="token comment"># 1. 构建阶段 (Build Stage)</span><span class="token comment"># =======================</span><span class="token comment"># 使用 Maven 构建应用</span><span class="token instruction"><span class="token keyword">FROM</span> maven:3.8.4-openjdk-17-slim <span class="token keyword">AS</span> builder</span><span class="token comment"># 设置工作目录</span><span class="token instruction"><span class="token keyword">WORKDIR</span> /build</span><span class="token comment"># 复制 pom.xml 和项目源码</span><span class="token instruction"><span class="token keyword">COPY</span> pom.xml .</span><span class="token instruction"><span class="token keyword">COPY</span> src ./src</span><span class="token comment"># 下载依赖并构建项目</span><span class="token instruction"><span class="token keyword">RUN</span> mvn clean install -DskipTests</span><span class="token comment"># =======================</span><span class="token comment"># 2. 运行阶段 (Run Stage)</span><span class="token comment"># =======================</span><span class="token comment"># 使用更轻量级的 JRE 镜像运行应用</span><span class="token instruction"><span class="token keyword">FROM</span> openjdk:17-jdk-slim</span><span class="token comment"># 设置环境变量</span><span class="token instruction"><span class="token keyword">ENV</span> LANG C.UTF-8</span><span class="token comment"># 创建目录来存放应用程序</span><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span><span class="token comment"># 从构建阶段复制 JAR 文件到运行镜像</span><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /build/target/myapp.jar /app/myapp.jar</span><span class="token comment"># 暴露服务端口</span><span class="token instruction"><span class="token keyword">EXPOSE</span> 8080</span><span class="token comment"># 定义容器启动时执行的命令</span><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">"java"</span>, <span class="token string">"-jar"</span>, <span class="token string">"myapp.jar"</span>]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li>编译打包时使用的时Maven的官方镜像，如果使用的时自己的Jar包依赖仓库，需重新构建镜像修改<code>setting.xml</code>配置</li><li>Java程序依赖的JDK版本可以根据实际情况选择<ul><li>趋向稳定性，可以自己构建基础JDK镜像，有可能镜像比较大，安全性一般</li><li>趋向精简化，寻找一些官方提供的JDK镜像，一般基于apline的镜像最小，降低攻击面</li></ul></li><li>尽量避免使用<code>root</code>用户运行Java程序</li></ul><p><strong>构建并上传镜像</strong></p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> build <span class="token parameter variable">-t</span> <span class="token number">192.168</span>.1.12:8080/myapp:1.0 <span class="token builtin class-name">.</span><span class="token function">docker</span> pull <span class="token number">192.168</span>.1.12:8080/myapp:1.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="规范化"><a href="#规范化" class="headerlink" title="规范化"></a>规范化</h2><p><strong>制品命名</strong></p><p>pom.xml 配置服务名称、版本号</p><figure><div class="code-wrapper"><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2025.01.01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure>]]></content>
    
    
    <categories>
      
      <category>DevOps</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JAVA</tag>
      
      <tag>CICD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx运维</title>
    <link href="/2024/12/20/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/nginx%E8%BF%90%E7%BB%B4/"/>
    <url>/2024/12/20/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/nginx%E8%BF%90%E7%BB%B4/</url>
    
    <content type="html"><![CDATA[<h2 id="高可用"><a href="#高可用" class="headerlink" title="高可用"></a>高可用</h2><p>高可用方案</p><ul><li><code>Keepalived + Nginx</code>：常见高可用方案，适合中小型应用</li><li><code>LVS + Nginx</code>：需要更高性能和扩展性的系统</li><li><code>DNS + Nginx</code>：适用于分布式或全球业务</li><li>云服务（如AWS ALB, NGINX Plus, Kubernetes Ingress Controller）</li></ul><h3 id="基于-Keepalived-Nginx-的高可用方案"><a href="#基于-Keepalived-Nginx-的高可用方案" class="headerlink" title="基于 Keepalived + Nginx 的高可用方案"></a>基于 <code>Keepalived + Nginx</code> 的高可用方案</h3><h4 id="方案架构"><a href="#方案架构" class="headerlink" title="方案架构"></a>方案架构</h4><ul><li>两个<code>Nginx</code>实例：两台服务器运行<code>Nginx</code>作为负载均衡器</li><li><code>Keepalived</code>：管理虚拟IP，确保一台<code>Nginx</code>服务器宕机时，另一台<code>Nginx</code>服务器能接管虚拟<code>IP</code></li></ul><h4 id="方案细节"><a href="#方案细节" class="headerlink" title="方案细节"></a>方案细节</h4><p><strong>虚拟IP配置</strong></p><p>两台<code>Nginx</code>服务器上配置Keepalived，使用 VRRP协议创建一个虚拟<code>IP</code>(<code>VIP</code>)，该<code>IP</code>会在两台服务器之间切换</p><p><strong><code>Nginx</code>配置</strong></p><p>每台<code>Nginx</code>服务器运行相同的配置，负载均衡到后端服务器上。</p><p>如果有缓存需求，可以使用<code>Nginx</code>缓存模块提高性能</p><p><strong>健康检查</strong></p><p>通过<code>Keepalived</code>进行<code>Nginx</code>服务和后端服务器的健康检查。当<code>Nginx</code>实例本身或后端服务器出现问题时，进行故障转移</p><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><p><strong>优点</strong></p><ul><li>故障切换快：其中一台<code>Nginx</code>服务器宕机时，备份服务器会迅速接管<code>VIP</code>，保证业务不间断</li><li>配置简单</li><li>低成本：无需额外的硬件设备</li></ul><p><strong>缺点</strong></p><ul><li>单点故障问题：<code>Nginx</code>实现了高可用，如果后端应用服务器存在单点故障，整个系统仍然无法保持高可用</li><li>健康检查要求高：如果健康检查配置不当，导致虚拟<code>IP</code>频繁切换，从而影响业务的稳定性</li><li>性能瓶颈：<code>Keepalived</code>和<code>Nginx</code>会存在一定的性能开销，尤其是在高并发环境下，可能会成为瓶颈</li></ul><h3 id="基于-LVS-Linux-Virtual-Server-Nginx-的高可用方案"><a href="#基于-LVS-Linux-Virtual-Server-Nginx-的高可用方案" class="headerlink" title="基于 LVS (Linux Virtual Server) + Nginx 的高可用方案"></a>基于 <code>LVS (Linux Virtual Server) + Nginx</code> 的高可用方案</h3><h4 id="方案架构-1"><a href="#方案架构-1" class="headerlink" title="方案架构"></a>方案架构</h4><ul><li>**<code>LVS </code>(<code>Linux Virtual Server</code>)**：使用<code>LVS</code>作为负载均衡器，<code>Nginx</code>作为实际的反向代理和负载均衡服务。<code>LVS</code>提供对<code>TCP/IP</code>层的高效流量转发</li><li>**<code>Heartbeat</code>**：与<code>LVS</code>配合，使用<code>Heartbeat</code>实现高可用</li></ul><h4 id="方案细节-1"><a href="#方案细节-1" class="headerlink" title="方案细节"></a>方案细节</h4><p><strong><code>LVS</code>配置</strong></p><ul><li><code>LVS</code>作为第一层负载均衡，接收外部流量，转发到<code>Nginx</code>服务器</li><li><code>LVS</code>通过<code>Direct Routing</code>模式将流量直接转发到<code>Nginx</code>节点，从而减少负载均衡节点的负载</li></ul><p><strong><code>Heartbeat</code></strong></p><p><code>Heartbeat</code>会监控<code>LVS</code>的状态，当主<code>LVS</code>节点出现故障时，自动将流量切换到备份<code>LVS</code>节点</p><p><strong><code>Nginx</code>配置</strong></p><p>每台<code>Nginx</code>服务器配置相同</p><h4 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h4><p><strong>优点</strong></p><ul><li>高效流量转发：提供更高的负载均衡能力，支持更高的并发和流量</li><li>灵活性：支持不同的负载均衡算法</li><li>可扩展性强：可方便增加更多<code>Nginx</code>节点水平扩展</li></ul><p><strong>缺点</strong></p><ul><li>配置复杂：相比<code>Keepalvied</code>，<code>LVS</code>和<code>Heartbeat</code>配置复杂度较高</li><li>调试难度大：多层负载均衡结构下，问题排查和调试难度大</li><li>依赖硬件条件：<code>LVS</code>的高效性对硬件条件较高，需要更好的网络带宽和服务器性能</li></ul><h3 id="基于DNS负载均衡-Nginx的高可用方案"><a href="#基于DNS负载均衡-Nginx的高可用方案" class="headerlink" title="基于DNS负载均衡+ Nginx的高可用方案"></a>基于<code>DNS</code>负载均衡<code>+ Nginx</code>的高可用方案</h3><h4 id="方案架构-2"><a href="#方案架构-2" class="headerlink" title="方案架构"></a>方案架构</h4><ul><li>使用<code>DNS</code>负载均衡机制。用户请求时，<code>DNS</code>服务器将请求的域名解析到可用的<code>Nginx</code>服务器<code>IP</code></li><li>配合健康检查，如果<code>Nginx</code>实例不可用，<code>DNS</code>将该实例的IP从解析记录中移除</li></ul><h4 id="方案细节-2"><a href="#方案细节-2" class="headerlink" title="方案细节"></a>方案细节</h4><p><strong>DNS负载均衡</strong></p><ul><li>配置多个A记录，指向不同Nginx实例IP地址</li><li>通过 <strong><code>Round Robin</code></strong> 或者基于 <strong><code>GeoDNS</code></strong> 的地理位置智能路由来实现流量分发</li></ul><p><strong>健康检查</strong></p><p>使用监控工具来检查<code>Nginx</code>服务器的健康状态，并动态更新<code>DNS</code>解析记录</p><p><strong><code>Nginx</code>配置</strong></p><p>每台<code>Nginx</code>服务器配置相同</p><h4 id="优缺点-2"><a href="#优缺点-2" class="headerlink" title="优缺点"></a>优缺点</h4><p><strong>优点</strong></p><ul><li>简化运维：无需额外的负载均衡器</li><li>灵活性：<code>DNS</code>负载均衡允许快速扩展和调整服务器</li></ul><p><strong>缺点</strong></p><ul><li><code>DNS</code>缓存问题：<code>DNS</code>解析有缓存机制，服务器变动或故障时，更新<code>DNS</code>记录需要时间，导致请求仍被路由到有问题的<code>Nginx</code>服务器</li><li>健康检查延迟：<code>DNS</code>负载均衡的健康检查更新通常较慢，可能导致短时间内流量会路由到不可用的节点</li><li>不能处理<code>TCP</code>负载均衡：<code>DNS</code>负载均衡主要用于<code>HTTP/HTTPS</code>流量，若需要处理<code>TCP</code>协议，需要借助其它方案</li></ul><h3 id="基于-云服务（如AWS-ALB-NGINX-Plus-Kubernetes-Ingress-Controller）-的高可用方案"><a href="#基于-云服务（如AWS-ALB-NGINX-Plus-Kubernetes-Ingress-Controller）-的高可用方案" class="headerlink" title="基于 云服务（如AWS ALB, NGINX Plus, Kubernetes Ingress Controller） 的高可用方案"></a>基于 云服务（如<code>AWS ALB, NGINX Plus, Kubernetes Ingress Controller</code>） 的高可用方案</h3><h4 id="优缺点-3"><a href="#优缺点-3" class="headerlink" title="优缺点"></a>优缺点</h4><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a><strong>优点</strong></h4><ul><li><strong>高度集成与自动化</strong>：利用云平台的管理服务，可以自动进行负载均衡、扩容、故障恢复等操作。</li><li><strong>可靠性高</strong>：云平台的负载均衡服务经过多年的优化，稳定性和可靠性都很高。</li><li><strong>弹性扩展</strong>：可以轻松地按需扩展Nginx实例和后端服务。</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a><strong>缺点</strong></h4><ul><li><strong>成本较高</strong>：云服务通常会产生一定的费用，尤其是涉及到高流量或需要更多实例时。</li><li><strong>依赖于云平台</strong>：如果应用部署在多个云平台或者私有环境中，可能无法充分利用云平台的高可用服务</li></ul><h2 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h2><h3 id="工作节点进程数和线程数"><a href="#工作节点进程数和线程数" class="headerlink" title="工作节点进程数和线程数"></a>工作节点进程数和线程数</h3><p><code>worker_processes</code>决定了能够同时处理的请求数。理想的<code>worker_processes</code>数量通常是与CPU核心数相匹配</p><ul><li>如果服务器有多个CPU核心，建议将<code>worker_processes</code>设置为和CPU核心数相同或稍高</li><li>I&#x2F;O密集型(例如文件下载、视频流)应用，<code>worker_processes</code>可以设置为更高的值，以处理更多的并发请求</li><li>CPU密集型(例如数据计算)应用，<code>worker_processes</code>设置为CPU核心数比较合适</li></ul><p><strong>调整<code>worker_processes</code></strong></p><p>编辑<code>Nginx</code>配置文件修改参数</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">worker_processes</span> auto</span><span class="token punctuation">;</span>  <span class="token comment"># 自动检测系统的 CPU 核心数</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p>手动设置数量</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">worker_processes</span> <span class="token number">4</span></span><span class="token punctuation">;</span>     <span class="token comment"># 设置为 4，适用于 4 核 CPU</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>调整 <code>worker_connections</code></strong></p><p><code>worker_connections</code>控制每个<code>worker</code>进程最大连接数</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">worker_connections</span> <span class="token number">1024</span></span><span class="token punctuation">;</span>  <span class="token comment"># 每个 worker 进程最多支持 1024 个连接</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><strong>调整 <code>worker_rlimit_nofile</code></strong></p><p><code>worker_rlimit_nofile</code> 设置每个<code>worker </code>进程可打开的最大文件描述符数</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">worker_rlimit_nofile</span> <span class="token number">100000</span></span><span class="token punctuation">;</span>  <span class="token comment"># 增加每个 worker 进程的文件句柄限制</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><h3 id="启用Gzip"><a href="#启用Gzip" class="headerlink" title="启用Gzip"></a>启用Gzip</h3><p>编译<code>Nginx</code>时启用<code>Gzip</code>模块</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./configure --with-http_gzip_static_module --with-http_gzip_module<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><p>添加<code>Nginx</code>配置文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span>    ...    <span class="token directive"><span class="token keyword">gzip</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span> <span class="token comment"># 开启Gzip压缩功能</span>    <span class="token directive"><span class="token keyword">gzip_min_length</span> <span class="token number">1k</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置最小压缩文件大小为1KB</span>    <span class="token directive"><span class="token keyword">gzip_buffers</span> <span class="token number">4</span> <span class="token number">16k</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置压缩缓冲区个数和大小</span>    <span class="token directive"><span class="token keyword">gzip_http_version</span> 1.1</span><span class="token punctuation">;</span> <span class="token comment"># 设置支持的HTTP协议版本为1.1</span>    <span class="token directive"><span class="token keyword">gzip_comp_level</span> <span class="token number">2</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置压缩级别为2（速度与压缩率的平衡）</span>    <span class="token directive"><span class="token keyword">gzip_types</span> text/plain application/x-javascript text/css application/xml</span><span class="token punctuation">;</span> <span class="token comment"># 设置需要压缩的文件类型</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="缓存策略"><a href="#缓存策略" class="headerlink" title="缓存策略"></a>缓存策略</h3><h4 id="配置浏览器缓存时间"><a href="#配置浏览器缓存时间" class="headerlink" title="配置浏览器缓存时间"></a>配置浏览器缓存时间</h4><p>设置HTTP响应头中的<code>Expires</code>和<code>Cache-Control</code>字段，可以控制浏览器缓存的时间</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">location</span> ~* \.(jpg|jpeg|gif|png|css|js)$</span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">add_header</span> Cache-Control <span class="token string">"public, max-age=31536000"</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置静态资源的缓存时间为1年（单位：秒）</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="配置代理服务器缓存时间"><a href="#配置代理服务器缓存时间" class="headerlink" title="配置代理服务器缓存时间"></a>配置代理服务器缓存时间</h4><p>Nginx作为反向代理服务器使用，可以通过设置<code>proxy_cache_valid</code>和<code>proxy_cache_valid</code>指令来控制代理服务器的缓存时间</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">proxy_pass</span> http://backend</span><span class="token punctuation">;</span> <span class="token comment"># 将请求转发到后端服务器</span>    <span class="token directive"><span class="token keyword">proxy_cache</span> mycache</span><span class="token punctuation">;</span> <span class="token comment"># 启用缓存，命名为mycache</span>    <span class="token directive"><span class="token keyword">proxy_cache_valid</span> <span class="token number">200</span> <span class="token number">302</span> <span class="token number">60m</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置缓存有效时间为60分钟（单位：秒）</span>    <span class="token directive"><span class="token keyword">proxy_cache_valid</span> <span class="token number">404</span> <span class="token number">1m</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置缓存有效时间为1分钟（单位：秒）</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h3 id="优化文件访问方式"><a href="#优化文件访问方式" class="headerlink" title="优化文件访问方式"></a>优化文件访问方式</h3><p>处理静态文件时，Nginx默认会将文件读取到内存中进行处理。这种方式在大文件或高并发情况下会导致内存消耗过大，影响性能。因此，可以采用优化文件访问方式来提高性能</p><h4 id="send-file"><a href="#send-file" class="headerlink" title="send_file"></a>send_file</h4><p><code>send_file()</code>函数可以直接将文件从磁盘读取并发送到网络，避免了数据在用户空间和内核空间之间的拷贝，提高了性能</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span>    ...    <span class="token directive"><span class="token keyword">sendfile</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span> <span class="token comment"># 开启sendfile()函数支持功能（需要操作系统支持）</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="send-file-max-chunk"><a href="#send-file-max-chunk" class="headerlink" title="send_file_max_chunk"></a>send_file_max_chunk</h4><p>控制Nginx在发送文件时的最大分片大小</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span>    ...    <span class="token directive"><span class="token keyword">sendfile_max_chunk</span> <span class="token number">1m</span></span><span class="token punctuation">;</span> <span class="token comment"># 设置最大分片大小为1MB</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="tcp-nopush"><a href="#tcp-nopush" class="headerlink" title="tcp_nopush"></a>tcp_nopush</h4><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span>    ...    <span class="token directive"><span class="token keyword">tcp_nopush</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span> <span class="token comment"># 开启TCP_CORK选项</span>    ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h2><h3 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h3><p><code>log_format</code>指令格式</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">log_format</span> name format</span> <span class="token punctuation">&#123;</span>format ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><p><code>Nginx</code> 日志格式示例</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">log_format</span> compression <span class="token string">'<span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> '</span>                       <span class="token string">'"<span class="token variable">$request</span>" <span class="token variable">$status</span> <span class="token variable">$bytes_sent</span> '</span>                       <span class="token string">'"<span class="token variable">$http_referer</span>" "<span class="token variable">$http_user_agent</span>" "<span class="token variable">$gzip_ratio</span>"'</span></span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">access_log</span> /spool/logs/nginx-access.log compression buffer=32k</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>更详细的自定义配置可以根据下面设置</p><table><thead><tr><th>参数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>$remote_addr</td><td>客户端IP地址，真实IP地址</td><td>211.28.65.253</td></tr><tr><td>$remote_user</td><td>客户端用户名称</td><td>–</td></tr><tr><td>$time_local</td><td>用日志格式下的本地时间和时区，服务器时间</td><td>18&#x2F;Jul&#x2F;2012:17:00:01 +0800</td></tr><tr><td>$request</td><td>请求方式、URI和HTTP协议</td><td>“GET &#x2F;article-10000.html HTTP&#x2F;1.1”</td></tr><tr><td>$request_length</td><td>请求的长度（包括请求行，请求头和请求正文）</td><td></td></tr><tr><td>$request_time</td><td>请求处理时间，单位秒</td><td>0.205</td></tr><tr><td>$status</td><td>请求状态码，如200、302、404等</td><td>200</td></tr><tr><td>$body_bytes_sent</td><td>发送给客户端的字节数，不包括响应头大小</td><td>1547</td></tr><tr><td>$http_host</td><td>请求地址，即浏览器中你输入的地址（IP或域名）</td><td><a href="http://www.wang.com/">www.wang.com</a> 192.168.100.100</td></tr><tr><td>$http_referer</td><td>来源页面地址，从哪个页面跳转到本页</td><td><a href="https://www.baidu.com/">https://www.baidu.com/</a></td></tr><tr><td>$http_user_agent</td><td>用户浏览器标识</td><td>“Mozilla&#x2F;4.0”</td></tr><tr><td>$http_x_forwarded_for</td><td>如果使用了代理，这个参数会记录代理服务器的ip和客户端的ip</td><td></td></tr><tr><td>$host</td><td>等同于$http_host</td><td></td></tr><tr><td>$uri</td><td>请求中的当前URI(不带请求参数，参数位于$args)</td><td></td></tr><tr><td>$ssl_protocol</td><td>SSL协议版本</td><td>TLSv1</td></tr><tr><td>$ssl_cipher</td><td>交换数据中的算法</td><td>RC4-SHA</td></tr><tr><td>$upstream_addr</td><td>上游服务器IP 地址和端口，或上游服务器的 UNIX 域套接字的路径，即真正提供服务的主机地址。在请求处理期间联系了多个服务器，则它们的地址用逗号分隔</td><td>192.168.1.1:80, 192.168.1.2:80, unix:&#x2F;tmp&#x2F;sock</td></tr><tr><td>$upstream_status</td><td>200</td><td></td></tr><tr><td>$upstream_response_time</td><td>从上游服务器接收响应所花费的时间，从建立连接、传输数据到关闭连接的时间</td><td>0.002</td></tr><tr><td>$upstream_header_time</td><td>从上游服务器接收响应头所花费的时间；时间以秒为单位，精度为毫秒。多个响应的时间用逗号和冒号分隔</td><td></td></tr><tr><td>$upstream_connect_time</td><td>与上游服务器建立连接所花费的时间；时间以秒为单位，精度为毫秒。如果是 SSL，则包括握手所花费的时间。多个连接的时间用逗号和冒号分隔</td><td></td></tr><tr><td>$upstream_bytes_received</td><td>从上游服务器接收的字节数，来自多个连接的值以逗号和冒号分隔</td><td></td></tr><tr><td>$upstream_bytes_sent</td><td>发送到上游服务器的字节数，来自多个连接的值以逗号和冒号分隔</td><td></td></tr><tr><td>$upstream_queue_time</td><td>请求在上游<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#queue">队列</a>中花费的时间，时间以秒为单位，精度为毫秒。多个响应的时间用逗号和冒号分隔</td><td></td></tr></tbody></table><h3 id="日志切分"><a href="#日志切分" class="headerlink" title="日志切分"></a>日志切分</h3><p><code>Nginx</code>本身不直接限制日志文件大小，可以通过以下方式对日志进行切分处理</p><ul><li>外部工具：<code>logrotate</code></li><li>Shell脚本</li><li><code>Nginx</code>日志分割模块</li></ul><p><code>Nginx</code>中日志路径配置</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/access.log</span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">error_log</span> /var/log/nginx/error.log</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h4 id="logrotate"><a href="#logrotate" class="headerlink" title="logrotate"></a>logrotate</h4><p>针对<code>Nginx</code>日志，<code>logrotate</code>配置文件示例</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;var&#x2F;log&#x2F;nginx&#x2F;*.log &#123;    daily                      # 每日切割    rotate 7                   # 保留 7 天的日志    size 100M                  # 单个日志文件限制为 100 MB    compress                   # 使用 gzip 压缩    delaycompress              # 延迟压缩到下次切割    missingok                  # 忽略日志缺失的错误    notifempty                 # 忽略空日志文件    create 0640 nginx adm      # 创建新的日志文件并设置权限    sharedscripts    postrotate        [ -f &#x2F;run&#x2F;nginx.pid ] &amp;&amp; kill -USR1 &#96;cat &#x2F;run&#x2F;nginx.pid&#96; # kill -USR1 信号通知 Nginx 重新打开日志文件    endscript&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>将此配置保存到 <code>/etc/logrotate.d/nginx</code> 文件中，<code>logrotate</code> 会自动处理</p><p><strong>排查验证</strong></p><p>检查<code>logrotate</code>配置文件是否正确</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">logrotate</span> <span class="token parameter variable">-d</span> /etc/logrotate.d/nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></figure><ul><li><code>-d</code> 表示调试模式，不执行实际操作，仅显示执行过程。</li><li>如果有错误，输出日志会指出问题所在</li></ul><p>检查<code>Nginx</code>是否重新打开日志文件</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">postrotate    [ -f &#x2F;run&#x2F;nginx.pid ] &amp;&amp; kill -USR1 &#96;cat &#x2F;run&#x2F;nginx.pid&#96;endscript<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></figure><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 手动测试重启日志</span><span class="token function">sudo</span> <span class="token function">kill</span> <span class="token parameter variable">-USR1</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /run/nginx.pid<span class="token variable">)</span></span><span class="token comment"># 检查Nginx错误日志</span><span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">20</span> /var/log/nginx/error.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>检查<code>logrotate</code>定时任务</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 确认 cron 任务存在</span><span class="token function">cat</span> /etc/cron.daily/logrotate<span class="token comment"># 手动测试logrotate, -f 强制执行日志轮转</span><span class="token function">sudo</span> /usr/sbin/logrotate <span class="token parameter variable">-f</span> /etc/logrotate.conf<span class="token comment"># 查看日志轮转执行结果</span><span class="token function">cat</span> /var/lib/logrotate/status<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h4 id="Shell脚本"><a href="#Shell脚本" class="headerlink" title="Shell脚本"></a>Shell脚本</h4><p>使用shell脚本进行切分<code>Nginx</code>日志</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#! /bin/bash</span><span class="token function">mv</span> /var/log/nginx/access.log /var/log/nginx/access.log.old<span class="token function">mv</span> /var/log/nginx/error.log /var/log/nginx/error.log.old<span class="token function">kill</span> <span class="token parameter variable">-USR1</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /run/nginx.pid<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>可以自定义添加脚本许多其它功能：</p><ul><li>添加到<code>crontab</code>定时执行</li><li>压缩备份</li><li>添加备份日期等</li></ul><h4 id="Nginx日志分割模块"><a href="#Nginx日志分割模块" class="headerlink" title="Nginx日志分割模块"></a>Nginx日志分割模块</h4><p>按域名记录日志</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">log_format</span> custom <span class="token string">'<span class="token variable">$host</span> <span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> '</span>                   <span class="token string">'"<span class="token variable">$request</span>" <span class="token variable">$status</span> <span class="token variable">$body_bytes_sent</span> "<span class="token variable">$http_referer</span>" '</span>                   <span class="token string">'"<span class="token variable">$http_user_agent</span>"'</span></span><span class="token punctuation">;</span><span class="token directive"><span class="token keyword">map</span> <span class="token variable">$host</span> <span class="token variable">$log_file</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">host1.example.com</span> /var/log/nginx/host1.log</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">host2.example.com</span> /var/log/nginx/host2.log</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">default</span> /var/log/nginx/default.log</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/access.log custom</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>使用<code>Systemd</code>管理，添加文件<code>/usr/lib/systemd/system/nginx.service</code></p><figure><div class="code-wrapper"><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Unit</span><span class="token punctuation">]</span></span><span class="token key attr-name">Description</span><span class="token punctuation">=</span><span class="token value attr-value">The nginx HTTP and reverse proxy server</span><span class="token key attr-name">After</span><span class="token punctuation">=</span><span class="token value attr-value">network-online.target</span><span class="token key attr-name">Wants</span><span class="token punctuation">=</span><span class="token value attr-value">network-online.target</span>   <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Service</span><span class="token punctuation">]</span></span> <span class="token key attr-name">Type</span><span class="token punctuation">=</span><span class="token value attr-value">forking</span><span class="token key attr-name">PIDFile</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/nginx/logs/nginx.pid</span><span class="token key attr-name">ExecStartPre</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/bin/rm -f /usr/local/nginx/logs/nginx.pid</span><span class="token key attr-name">ExecStartPre</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/nginx/sbin/nginx -t</span><span class="token key attr-name">ExecStart</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/nginx/sbin/nginx</span><span class="token key attr-name">ExecReload</span><span class="token punctuation">=</span><span class="token value attr-value">/usr/local/nginx/sbin/nginx -s reload</span><span class="token key attr-name">KillSignal</span><span class="token punctuation">=</span><span class="token value attr-value">SIGQUIT</span><span class="token key attr-name">TimeoutStopSec</span><span class="token punctuation">=</span><span class="token value attr-value">5</span><span class="token key attr-name">KillMode</span><span class="token punctuation">=</span><span class="token value attr-value">process</span><span class="token key attr-name">PrivateTmp</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>    <span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">Install</span><span class="token punctuation">]</span></span> <span class="token key attr-name">WantedBy</span><span class="token punctuation">=</span><span class="token value attr-value">multi-user.target</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>添加开启启动</p><figure><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl daemon-reload<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></figure><h2 id="Nginx监控"><a href="#Nginx监控" class="headerlink" title="Nginx监控"></a>Nginx监控</h2><p>使用<code>nginx_status</code>模块</p><p>启用<code>Nginx</code>状态监控页面<code>stub_status</code></p><p><code>nginx.conf</code>中启用<code>stub_status</code>模块</p><figure><div class="code-wrapper"><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>    <span class="token directive"><span class="token keyword">listen</span> 127.0.0.1:8080</span><span class="token punctuation">;</span>  <span class="token comment"># 监听本地地址</span>    <span class="token directive"><span class="token keyword">server_name</span> localhost</span><span class="token punctuation">;</span>    <span class="token directive"><span class="token keyword">location</span> /nginx_status</span> <span class="token punctuation">&#123;</span>        <span class="token directive"><span class="token keyword">stub_status</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">access_log</span> <span class="token boolean">off</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">allow</span> 127.0.0.1</span><span class="token punctuation">;</span>   <span class="token comment"># 仅允许本地访问</span>        <span class="token directive"><span class="token keyword">deny</span> all</span><span class="token punctuation">;</span>           <span class="token comment"># 拒绝其他 IP 访问</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure><p>通过访问 <code>http://localhost:8080/nginx_status</code>，看到以下信息：</p><figure><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Active connections: 10 server accepts handled requests 19 19 19 Reading: 0 Writing: 1 Waiting: 9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div></figure><ul><li><strong>Active connections</strong>：当前活动的连接数。</li><li><strong>server accepts handled requests</strong>：接受、处理和响应的请求数量。</li><li><strong>Reading</strong>：正在读取请求头的连接数。</li><li><strong>Writing</strong>：正在发送响应的连接数。</li><li><strong>Waiting</strong>：保持连接空闲的数量（在 <code>keep-alive</code> 状态下）</li></ul>]]></content>
    
    
    <categories>
      
      <category>应用运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nginx</tag>
      
      <tag>负载均衡</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
